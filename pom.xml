<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.ac.ebi.jmzidml</groupId>
    <artifactId>jmzidentml</artifactId>
    <packaging>jar</packaging>
    <version>1.2.7-SNAPSHOT</version>
    <name>mzIdentML Java core API</name>
    <url>https://github.com/PRIDE-Utilities/jmzIdentML</url>

    <parent>
        <groupId>uk.ac.ebi.pride.architectural</groupId>
        <artifactId>pride-core</artifactId>
        <version>1.0.1</version>
    </parent>

    <developers>
        <developer>
            <id>mbernal</id>
            <name>Manuel Bernal-Llinares</name>
            <organization>Proteomics Team, EMBL-European Bioinformatics Institute</organization>
            <organizationUrl>http://www.ebi.ac.uk/pride</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>Europe/London</timezone>
        </developer>
        <developer>
            <name>Yasset Perez-Riverol</name>
            <id>ypriverol</id>
            <email>yperez@ebi.ac.uk</email>
            <organization>Proteomics Services Team, PANDA Group, EMBL-European Bioinformatics Institute</organization>
        </developer>

    </developers>

    <properties>
        <uk.ac.ebi.pride.architectural.pride-logging.version>1.0.0</uk.ac.ebi.pride.architectural.pride-logging.version>
        <uk.ac.ebi.pride.architectural.pride-tdd.version>1.0.3</uk.ac.ebi.pride.architectural.pride-tdd.version>
        <psidev.psi.tools-xxindex.version>0.21</psidev.psi.tools-xxindex.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- Logging, from PRIDE, is included here, but this project needs log4j, and pride-logging combines slf4j with
                logback, which is supposed to be more modern. A discussion should take place here about whether or not a
                particular slf4j backend should be included in pride-logging. From my (mbernal) point of view, it makes sense
                that, from pride architectural packages we try to push for certain technologies, giving the client artifact the
                freedom to not use them and opt for a different one, like in this case, where instead of using logback, this
                artifact is using log4j -->
        <dependency>
            <groupId>uk.ac.ebi.pride.architectural</groupId>
            <artifactId>pride-logging</artifactId>
            <version>${uk.ac.ebi.pride.architectural.pride-logging.version}</version>
            <type>pom</type>
        </dependency>
        <!-- TDD -->
        <dependency>
            <groupId>uk.ac.ebi.pride.architectural</groupId>
            <artifactId>pride-tdd</artifactId>
            <version>${uk.ac.ebi.pride.architectural.pride-tdd.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
            <version>4.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>2.2.7</version>
        </dependency>
        <dependency>
            <groupId>psidev.psi.tools</groupId>
            <artifactId>xxindex</artifactId>
            <version>${psidev.psi.tools-xxindex.version}</version>
        </dependency>

        <!-- needed for EscapingXMLStreamWriter to cope with ASCII control characters that are not properly escaped in JAXB -->
        <dependency>
            <groupId>it.unimi.dsi</groupId>
            <artifactId>fastutil</artifactId>
            <version>6.5.1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-source</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- you can use this plugin to generate the jaxb object model from
                     the schema and binding files specified below. Note: this will
                     need an explicit maven goal call, since it is not integrated
                     into the standard mvn life cycle. The goal to use is:
                     org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:0.6.3:generate

                     NOTE: the code generation may overwrite existing classes, so care
                           should be taken with files that were manually modified.
                 -->
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.6.3</version>
                <configuration>
                    <extension>true</extension>
                    <schemaDirectory>src/main/resources</schemaDirectory>
                    <schemaIncludes>
                        <include>mzIdentML1.1.0.xsd</include>
                    </schemaIncludes>
                    <bindingDirectory>src/main/resources</bindingDirectory>
                    <bindingIncludes>
                        <include>bindings-slim.xjb</include>
                    </bindingIncludes>
                    <generateDirectory>src/main/java</generateDirectory>
                    <removeOldOutput>false</removeOldOutput>
                    <forceRegenerate>true</forceRegenerate>
                    <verbose>true</verbose>
                    <args>
                        <arg>-no-header</arg>
                    </args>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--scm git config-->
    <scm>
        <connection>scm:git:https://github.com/PRIDE-Utilities/jmzIdentML.git</connection>
        <developerConnection>scm:git:https://github.com/PRIDE-Utilities/jmzIdentML.git</developerConnection>
        <url>https://github.com/PRIDE-Utilities/jmzIdentML.git</url>
        <tag>HEAD</tag>
    </scm>

</project>
